# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# next.js build output
.next
uploads

# Visual Studio Code Project Files
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Sublime Editor
# Cache files for Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache

# Workspace files are user-specific
*.sublime-workspace

# Project files should be checked into the repository, unless a significant
# proportion of contributors will probably not be using Sublime Text
# *.sublime-project

# SFTP configuration file
sftp-config.json

# Package control specific files
Package Control.last-run
Package Control.ca-list
Package Control.ca-bundle
Package Control.system-ca-bundle
Package Control.cache/
Package Control.ca-certs/
Package Control.merged-ca-bundle
Package Control.user-ca-bundle
oscrypto-ca-bundle.crt
bh_unicode_properties.cache

# Sublime-github package stores a github token in this file
# https://packagecontrol.io/packages/sublime-github
GitHub.sublime-settings

# For the Brackets Editor
Thumbs.db

# ignore jenkins build info
/build.prop

# package-lock.json
package-lock.json

# ignore node_modules created by grunt, but not more deeply-nested node_modules
/node_modules
/npm-debug.log

# ignore node_modules inside src
/src/node_modules
/src/JSUtils/node_modules
/src/JSUtils/node/node_modules

# ignore files copied from node_modules to src/thirdparty
/src/thirdparty/CodeMirror
/src/thirdparty/less.min.js
/src/thirdparty/preact
/src/thirdparty/preact-compat
/src/thirdparty/preact-test-utils
/src/thirdparty/simulate-event
/src/thirdparty/xtend
/src/thirdparty/acorn

# ignore compiled files
/dist
/src/.index.html
/src/styles/brackets.min.css
/src/styles/brackets.min.css.map

# ignore everything in the dev extension directory EXCEPT the README
# (so that the directory is non-empty and can be in git)
/src/extensions/dev/*
!/src/extensions/dev/README.*
/src/extensions/default/brackets-eslint

/src/extensions/disabled

# ignore .disabled file for default extensions
/src/extensions/default/*/.disabled

# generate through grunt
/src/config.json

#OSX .DS_Store files
.DS_Store

# unit test working directory
/test/results
/test/temp

# Netbeans
/nbproject

# PhpStorm
.idea

# Files that can be automatically downloaded that we don't want to ship with our builds
/src/extensibility/node/node_modules/request/tests/

# Files build by scripts
/src/thirdparty/semver.browser.js
